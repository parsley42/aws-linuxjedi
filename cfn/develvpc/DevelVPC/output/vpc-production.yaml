---
AWSTemplateFormatVersion: 2010-09-09
Description: Provides networking configuration for a standard, public facing application, separates private-public subnets and enforces traffic with NACL rules (qs-1nb14cqcl)
Metadata:
    AWS::CloudFormation::Interface:
        ParameterGroups:
        -   Label:
                default: Region Config
            Parameters:
            - pRegionAZ1Name
            - pRegionAZ2Name
        -   Label:
                default: Production VPC Config
            Parameters:
            - pProductionVPCName
            - pProductionCIDR
            - pDMZSubnetACIDR
            - pDMZSubnetBCIDR
            - pAppPrivateSubnetACIDR
            - pAppPrivateSubnetBCIDR
            - pDBPrivateSubnetACIDR
            - pDBPrivateSubnetBCIDR
            - pManagementVPC
            - pManagementCIDR
            - pManagementRouteTablePrivate
            - pManagementRouteTableDMZ
            - pCreateAppSubnets
            - pCreateNatGateway
            - pVPCTenancy
        ParameterLabels:
            pProductionVPCName:
                default: Name of Production VPC
            pProductionCIDR:
                default: Production VPC CIDR block
            pDMZSubnetACIDR:
                default: CIDR block of DMZ A subnet (internet facing)
            pDMZSubnetBCIDR:
                default: CIDR block of DMZ B subnet (internet facing)
            pAppPrivateSubnetACIDR:
                default: CIDR block of Application B subnet (private)
            pAppPrivateSubnetBCIDR:
                default: CIDR block of Application A subnet (private)
            pDBPrivateSubnetACIDR:
                default: CIDR block of Database A subnet (private)
            pDBPrivateSubnetBCIDR:
                default: CIDR block of Database B subnet (private)
            pManagementVPC:
                default: VPC id of Managment VPC
            pManagementCIDR:
                default: CIDR block for Management VPC
            pManagementRouteTablePrivate:
                default: Management VPC Private Route Table
            pManagementRouteTableDMZ:
                default: Management VPC DMZ Route Table
            pCreateAppSubnets:
                default: Whether or not to create App subnets
            pCreateNatGateway:
                default: Whether or not to create a NAT Gateway for private subnets
            pVPCTenancy:
                default: Instance tenancy
    Stack:
        Value: 2
    VersionDate:
        Value: 20160510
    Identifier:
        Value: template-vpc-production
    Input:
        Description: CIDR blocks, VPC names, KeyName, EC2 instance size
    Output:
        Description: Outputs ID of all deployed resources
Conditions:
    cEnableFlowLogs: !Not [ !Equals [ !Ref pFlowLogGroup, '' ] ]
    cCreateAppSubnets: !Equals [ true, !Ref pCreateAppSubnets ]
    cCreateNatGateway: !Equals [ true, !Ref pCreateNatGateway ]
Parameters:
    pRegionAZ1Name:
        Description: Availability Zone 1 Name in Region
        Type: AWS::EC2::AvailabilityZone::Name
    pRegionAZ2Name:
        Description: Availability Zone 2 Name in Region
        Type: AWS::EC2::AvailabilityZone::Name
    pProductionVPCName:
        Description: Production VPC Name
        Type: String
        Default: CommandCentral-Production
    pProductionCIDR:
        Description: CIDR block for Production VPC
        Type: String
        Default: 10.100.0.0/16
    pManagementCIDR:
        Description: CIDR block of Management VPC
        Type: String
    pDMZSubnetACIDR:
        Description: CIDR block for DMZ AZ-1b subnet
        Type: String
        Default: 10.100.10.0/24
    pDMZSubnetBCIDR:
        Description: CIDR block for DMZ AZ-1b subnet
        Type: String
        Default: 10.100.20.0/24
    pAppPrivateSubnetACIDR:
        Description: CIDR block for Application AZ-1a subnet
        Type: String
        Default: 10.100.96.0/21
    pAppPrivateSubnetBCIDR:
        Description: CIDR block for Application AZ-1b subnet
        Type: String
        Default: 10.100.119.0/21
    pDBPrivateSubnetACIDR:
        Description: CIDR block for Private AZ-1a subnet
        Type: String
        Default: 10.100.194.0/21
    pDBPrivateSubnetBCIDR:
        Description: CIDR block for Private AZ-1b subnet
        Type: String
        Default: 10.100.212.0/21
    pManagementVPC:
        Description: VPC id of Managment VPC
        Type: String
    pManagementRouteTablePrivate:
        Description: Management VPC Private Route Table
        Type: String
    pManagementRouteTableDMZ:
        Description: Management VPC DMZ Route Table
        Type: String
    pCreateAppSubnets:
        Description: Whether or not to create App subnets
        Type: String
        Default: 'false'
    pCreateNatGateway:
        Description: Whether or not to create a NAT Gateway for private subnets
        Type: String
        Default: 'false'
    pVPCTenancy:
        Description: Instance tenancy behavior for this VPC
        Type: String
        Default: default
        AllowedValues:
        - default
        - dedicated
    pEnvironment:
        Description: Environment (development, test, or production)
        Type: String
        Default: development
    pFlowLogGroup:
        Description: Log Group for capturing VPC Flow Logs
        Type: String
        Default: ''
    QuickStartS3URL:
        Description: Quick Start S3 URL prefix.
        Default: https://s3.amazonaws.com
        Type: String
    QSS3BucketName:
        AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z\\-\\.]*[0-9a-zA-Z])*$"
        ConstraintDescription: Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-).
        Default: quickstart-reference
        Description: S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-).
        Type: String
    QSS3KeyPrefix:
        AllowedPattern: "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$"
        ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.
        Default: quickstart-enterprise-accelerator-nist
        Description: S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.
        Type: String
Resources:
    rVPCProduction:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref pProductionCIDR
            InstanceTenancy: !Ref pVPCTenancy
            EnableDnsSupport: true
            EnableDnsHostnames: true
            Tags:
            -   Key: Creator
                Value: parsley@linuxjedi.org
            -   Key: Project
                Value: LinuxJedi
            -   Key: Repository
                Value: github.com/parsley/aws-linuxjedi
            -   Key: Name
                Value: !Ref pProductionVPCName
            -   Key: Environment
                Value: !Ref pEnvironment
    SecurityGroupsTemplate:
        Type: AWS::CloudFormation::Stack
        DependsOn:
        - rVPCProduction
        Properties:
            Parameters:
                pVpcId: !Ref rVPCProduction
                pProductionCIDR: !Ref pProductionCIDR
                pManagementCIDR: !Ref pManagementCIDR
                pEnvironment: !Ref pEnvironment
            Tags:
            -   Key: Creator
                Value: parsley@linuxjedi.org
            -   Key: Project
                Value: LinuxJedi
            -   Key: Repository
                Value: github.com/parsley/aws-linuxjedi
            -   Key: Name
                Value: SecurityGroupsTemplate
            -   Key: Environment
                Value: !Ref pEnvironment
            TemplateURL: https://s3.amazonaws.com/org.linuxjedi.raws/DevelVPC/securitygroups.yaml
    rDMZSubnetA:
        Type: AWS::EC2::Subnet
        Properties:
            CidrBlock: !Ref pDMZSubnetACIDR
            AvailabilityZone: !Ref pRegionAZ1Name
            VpcId: !Ref rVPCProduction
            Tags:
            -   Key: Creator
                Value: parsley@linuxjedi.org
            -   Key: Project
                Value: LinuxJedi
            -   Key: Repository
                Value: github.com/parsley/aws-linuxjedi
            -   Key: Name
                Value: Production DMZ Subnet A
            -   Key: Environment
                Value: !Ref pEnvironment
    rDMZSubnetB:
        Type: AWS::EC2::Subnet
        Properties:
            CidrBlock: !Ref pDMZSubnetBCIDR
            AvailabilityZone: !Ref pRegionAZ2Name
            VpcId: !Ref rVPCProduction
            Tags:
            -   Key: Creator
                Value: parsley@linuxjedi.org
            -   Key: Project
                Value: LinuxJedi
            -   Key: Repository
                Value: github.com/parsley/aws-linuxjedi
            -   Key: Name
                Value: Production DMZ Subnet B
            -   Key: Environment
                Value: !Ref pEnvironment
    rAppPrivateSubnetA:
        Condition: cCreateAppSubnets
        Type: AWS::EC2::Subnet
        Properties:
            CidrBlock: !Ref pAppPrivateSubnetACIDR
            AvailabilityZone: !Ref pRegionAZ1Name
            VpcId: !Ref rVPCProduction
            Tags:
            -   Key: Creator
                Value: parsley@linuxjedi.org
            -   Key: Project
                Value: LinuxJedi
            -   Key: Repository
                Value: github.com/parsley/aws-linuxjedi
            -   Key: Name
                Value: Production App Subnet A
            -   Key: Environment
                Value: !Ref pEnvironment
    rAppPrivateSubnetB:
        Condition: cCreateAppSubnets
        Type: AWS::EC2::Subnet
        Properties:
            CidrBlock: !Ref pAppPrivateSubnetBCIDR
            AvailabilityZone: !Ref pRegionAZ2Name
            VpcId: !Ref rVPCProduction
            Tags:
            -   Key: Creator
                Value: parsley@linuxjedi.org
            -   Key: Project
                Value: LinuxJedi
            -   Key: Repository
                Value: github.com/parsley/aws-linuxjedi
            -   Key: Name
                Value: Production App Subnet B
            -   Key: Environment
                Value: !Ref pEnvironment
    rDBPrivateSubnetA:
        Type: AWS::EC2::Subnet
        Properties:
            CidrBlock: !Ref pDBPrivateSubnetACIDR
            AvailabilityZone: !Ref pRegionAZ1Name
            VpcId: !Ref rVPCProduction
            Tags:
            -   Key: Creator
                Value: parsley@linuxjedi.org
            -   Key: Project
                Value: LinuxJedi
            -   Key: Repository
                Value: github.com/parsley/aws-linuxjedi
            -   Key: Name
                Value: Production DB Subnet A
            -   Key: Environment
                Value: !Ref pEnvironment
    rDBPrivateSubnetB:
        Type: AWS::EC2::Subnet
        Properties:
            CidrBlock: !Ref pDBPrivateSubnetBCIDR
            AvailabilityZone: !Ref pRegionAZ2Name
            VpcId: !Ref rVPCProduction
            Tags:
            -   Key: Creator
                Value: parsley@linuxjedi.org
            -   Key: Project
                Value: LinuxJedi
            -   Key: Repository
                Value: github.com/parsley/aws-linuxjedi
            -   Key: Name
                Value: Production DB Subnet B
            -   Key: Environment
                Value: !Ref pEnvironment
    rDBPrivateSubnetGroup:
        Type: AWS::RDS::DBSubnetGroup
        Properties:
            DBSubnetGroupDescription: !Sub ${pProductionVPCName}DBSubnets
            SubnetIds:
            - !Ref rDBPrivateSubnetA
            - !Ref rDBPrivateSubnetB
            Tags:
            -   Key: Creator
                Value: parsley@linuxjedi.org
            -   Key: Project
                Value: LinuxJedi
            -   Key: Repository
                Value: github.com/parsley/aws-linuxjedi
            -   Key: Name
                Value: rDBPrivateSubnetGroup
            -   Key: Environment
                Value: !Ref pEnvironment
    rIGWProd:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
            -   Key: Creator
                Value: parsley@linuxjedi.org
            -   Key: Project
                Value: LinuxJedi
            -   Key: Repository
                Value: github.com/parsley/aws-linuxjedi
            -   Key: Name
                Value: igw-production
            -   Key: Environment
                Value: !Ref pEnvironment
    rNACLPublic:
        Type: AWS::EC2::NetworkAcl
        Properties:
            VpcId: !Ref rVPCProduction
            Tags:
            -   Key: Creator
                Value: parsley@linuxjedi.org
            -   Key: Project
                Value: LinuxJedi
            -   Key: Repository
                Value: github.com/parsley/aws-linuxjedi
            -   Key: Name
                Value: rNACLPublic
            -   Key: Environment
                Value: !Ref pEnvironment
    rNACLPrivate:
        Type: AWS::EC2::NetworkAcl
        Properties:
            VpcId: !Ref rVPCProduction
            Tags:
            -   Key: Creator
                Value: parsley@linuxjedi.org
            -   Key: Project
                Value: LinuxJedi
            -   Key: Repository
                Value: github.com/parsley/aws-linuxjedi
            -   Key: Name
                Value: rNACLPrivate
            -   Key: Environment
                Value: !Ref pEnvironment
    rRouteTableMain:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref rVPCProduction
            Tags:
            -   Key: Creator
                Value: parsley@linuxjedi.org
            -   Key: Project
                Value: LinuxJedi
            -   Key: Repository
                Value: github.com/parsley/aws-linuxjedi
            -   Key: Name
                Value: Production DMZ Route
            -   Key: Environment
                Value: !Ref pEnvironment
    rEIPProdNatA:
        Type: AWS::EC2::EIP
        Condition: cCreateNatGateway
        Properties:
            Domain: vpc
    rNATGatewaySubnetA:
        Type: AWS::EC2::NatGateway
        DependsOn: rIGWProd
        Condition: cCreateNatGateway
        Properties:
            AllocationId: !GetAtt rEIPProdNatA.AllocationId
            SubnetId: !Ref rDMZSubnetA
    rEIPProdNatB:
        Type: AWS::EC2::EIP
        Condition: cCreateNatGateway
        Properties:
            Domain: vpc
    rNATGatewaySubnetB:
        Type: AWS::EC2::NatGateway
        DependsOn: rIGWProd
        Condition: cCreateNatGateway
        Properties:
            AllocationId: !GetAtt rEIPProdNatB.AllocationId
            SubnetId: !Ref rDMZSubnetB
    rRouteProdIGW:
        Type: AWS::EC2::Route
        DependsOn: rGWAttachmentProdIGW
        Properties:
            RouteTableId: !Ref rRouteTableMain
            GatewayId: !Ref rIGWProd
            DestinationCidrBlock: 0.0.0.0/0
    rRouteProdPrivateNatGatewayA:
        Type: AWS::EC2::Route
        Condition: cCreateNatGateway
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref rRouteTableProdPrivateA
            NatGatewayId: !Ref rNATGatewaySubnetA
    rRouteProdPrivateNatGatewayB:
        Type: AWS::EC2::Route
        Condition: cCreateNatGateway
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref rRouteTableProdPrivateB
            NatGatewayId: !Ref rNATGatewaySubnetB
    rRouteAssocProdDMZA:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref rRouteTableMain
            SubnetId: !Ref rDMZSubnetA
    rRouteAssocProdDMZB:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref rRouteTableMain
            SubnetId: !Ref rDMZSubnetB
    rAppPrivateSubnetAssociationA:
        Condition: cCreateAppSubnets
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref rRouteTableProdPrivateA
            SubnetId: !Ref rAppPrivateSubnetA
    rAppPrivateSubnetAssociationB:
        Condition: cCreateAppSubnets
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref rRouteTableProdPrivateB
            SubnetId: !Ref rAppPrivateSubnetB
    rRouteAssocDBPrivateA:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref rRouteTableProdPrivateA
            SubnetId: !Ref rDBPrivateSubnetA
    rRouteAssocDBPrivateB:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref rRouteTableProdPrivateB
            SubnetId: !Ref rDBPrivateSubnetB
    rRouteTableProdPrivateA:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref rVPCProduction
            Tags:
            -   Key: Creator
                Value: parsley@linuxjedi.org
            -   Key: Project
                Value: LinuxJedi
            -   Key: Repository
                Value: github.com/parsley/aws-linuxjedi
            -   Key: Name
                Value: Production Private Route A
            -   Key: Environment
                Value: !Ref pEnvironment
    rRouteTableProdPrivateB:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref rVPCProduction
            Tags:
            -   Key: Creator
                Value: parsley@linuxjedi.org
            -   Key: Project
                Value: LinuxJedi
            -   Key: Repository
                Value: github.com/parsley/aws-linuxjedi
            -   Key: Name
                Value: Production Private Route B
            -   Key: Environment
                Value: !Ref pEnvironment
    rNACLRuleAllowAllTCPInternal:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            CidrBlock: !Ref pProductionCIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 120
            NetworkAclId: !Ref rNACLPrivate
    rNACLRuleAllowBastionSSHAccessPrivate:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            CidrBlock: 0.0.0.0/0
            Protocol: 6
            PortRange:
                From: 22
                To: 22
            RuleAction: allow
            RuleNumber: 130
            NetworkAclId: !Ref rNACLPrivate
    rNACLRuleAllowMgmtAccessSSHtoPrivate:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            CidrBlock: !Ref pManagementCIDR
            Protocol: 6
            PortRange:
                From: 22
                To: 22
            RuleAction: allow
            RuleNumber: 125
            NetworkAclId: !Ref rNACLPrivate
    rNACLRuleAllowReturnTCPPriv:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            CidrBlock: 0.0.0.0/0
            Protocol: 6
            PortRange:
                From: 1024
                To: 65535
            RuleAction: allow
            RuleNumber: 140
            NetworkAclId: !Ref rNACLPrivate
    rNACLRuleAllowALLfromPrivEgress:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            CidrBlock: 0.0.0.0/0
            Egress: true
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 120
            NetworkAclId: !Ref rNACLPrivate
    rNACLRuleAllowAllTCPInternalEgress:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            CidrBlock: 0.0.0.0/0
            Egress: true
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 100
            NetworkAclId: !Ref rNACLPrivate
    rNACLRuleAllowALLEgressPublic:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            CidrBlock: 0.0.0.0/0
            Egress: true
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 100
            NetworkAclId: !Ref rNACLPublic
    rNACLRuleAllowAllReturnTCP:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            CidrBlock: 0.0.0.0/0
            Protocol: 6
            PortRange:
                From: 1024
                To: 65535
            RuleAction: allow
            RuleNumber: 140
            NetworkAclId: !Ref rNACLPublic
    rNACLRuleAllowHTTPfromProd:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            CidrBlock: !Ref pProductionCIDR
            Protocol: 6
            PortRange:
                From: 80
                To: 80
            RuleAction: allow
            RuleNumber: 200
            NetworkAclId: !Ref rNACLPublic
    rNACLRuleAllowBastionSSHAccessPublic:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            CidrBlock: 0.0.0.0/0
            Protocol: 6
            PortRange:
                From: 22
                To: 22
            RuleAction: allow
            RuleNumber: 210
            NetworkAclId: !Ref rNACLPublic
    rNACLRuleAllowEgressReturnTCP:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            CidrBlock: 0.0.0.0/0
            Egress: true
            Protocol: 6
            PortRange:
                From: 1024
                To: 65535
            RuleAction: allow
            RuleNumber: 140
            NetworkAclId: !Ref rNACLPublic
    rNACLRuleAllowHTTPSPublic:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            CidrBlock: 0.0.0.0/0
            Protocol: 6
            PortRange:
                From: 443
                To: 443
            RuleAction: allow
            RuleNumber: 100
            NetworkAclId: !Ref rNACLPublic
    rNACLAssocAppPrivSubnetB:
        Condition: cCreateAppSubnets
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Properties:
            NetworkAclId: !Ref rNACLPrivate
            SubnetId: !Ref rAppPrivateSubnetB
    rNACLAssocDMZPubSubnetA:
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Properties:
            NetworkAclId: !Ref rNACLPublic
            SubnetId: !Ref rDMZSubnetA
    rNACLAssocDMZPubSubnetB:
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Properties:
            NetworkAclId: !Ref rNACLPublic
            SubnetId: !Ref rDMZSubnetB
    rNACLAssocAppPrivSubnetA:
        Condition: cCreateAppSubnets
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Properties:
            NetworkAclId: !Ref rNACLPrivate
            SubnetId: !Ref rAppPrivateSubnetA
    rNACLAssocDBPrivSubnetA:
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Properties:
            NetworkAclId: !Ref rNACLPrivate
            SubnetId: !Ref rDBPrivateSubnetA
    rNACLAssocDBPrivSubnetB:
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Properties:
            NetworkAclId: !Ref rNACLPrivate
            SubnetId: !Ref rDBPrivateSubnetB
    rGWAttachmentProdIGW:
        Type: AWS::EC2::VPCGatewayAttachment
        DependsOn: rIGWProd
        Properties:
            VpcId: !Ref rVPCProduction
            InternetGatewayId: !Ref rIGWProd
    rProductionVpcFlowLogsServiceRole:
        Condition: cEnableFlowLogs
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                -   Sid: AllowFlowLogs
                    Effect: Allow
                    Principal:
                        Service: vpc-flow-logs.amazonaws.com
                    Action: sts:AssumeRole
            Path: "/"
            Policies:
            -   PolicyName: cloudwatchlogsrole
                PolicyDocument:
                    Version: 2012-10-17
                    Statement:
                    -   Action:
                        - logs:CreateLogGroup
                        - logs:CreateLogStream
                        - logs:PutLogEvents
                        - logs:DescribeLogGroups
                        - logs:DescribeLogStreams
                        Effect: Allow
                        Resource: "*"
    rProductionVpcFlowLog:
        Condition: cEnableFlowLogs
        Type: AWS::EC2::FlowLog
        Properties:
            DeliverLogsPermissionArn: !GetAtt rProductionVpcFlowLogsServiceRole.Arn
            LogGroupName: !Ref pFlowLogGroup
            ResourceId: !Ref rVPCProduction
            ResourceType: VPC
            TrafficType: ALL
    rProductionVpcFlowLogStream:
        Condition: cEnableFlowLogs
        Type: AWS::Logs::LogStream
        Properties:
            LogGroupName: !Ref pFlowLogGroup
    rPeeringConnectionManagement:
        Type: AWS::EC2::VPCPeeringConnection
        Properties:
            VpcId: !Ref rVPCProduction
            PeerVpcId: !Ref pManagementVPC
            Tags:
            -   Key: Name
                Value: vpc-peer-production-management
            -   Key: Environment
                Value: !Ref pEnvironment
    rRouteMgmtProdPrivate:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref pManagementRouteTablePrivate
            VpcPeeringConnectionId: !Ref rPeeringConnectionManagement
            DestinationCidrBlock: !Ref pProductionCIDR
    rRouteProdAMgmt:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref rRouteTableProdPrivateA
            VpcPeeringConnectionId: !Ref rPeeringConnectionManagement
            DestinationCidrBlock: !Ref pManagementCIDR
    rRouteProdBMgmt:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref rRouteTableProdPrivateB
            VpcPeeringConnectionId: !Ref rPeeringConnectionManagement
            DestinationCidrBlock: !Ref pManagementCIDR
    rRouteProdMgmtPublic:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref rRouteTableMain
            VpcPeeringConnectionId: !Ref rPeeringConnectionManagement
            DestinationCidrBlock: !Ref pManagementCIDR
    rRouteMgmtProdDMZ:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref pManagementRouteTableDMZ
            VpcPeeringConnectionId: !Ref rPeeringConnectionManagement
            DestinationCidrBlock: !Ref pProductionCIDR
Outputs:
    rVPCProduction:
        Value: !Ref rVPCProduction
    rDMZSubnetA:
        Value: !Ref rDMZSubnetA
    rDMZSubnetB:
        Value: !Ref rDMZSubnetB
    rRouteTableProdPrivate:
        Value: !Ref rRouteTableProdPrivateA
    rRouteTableProdPrivateB:
        Value: !Ref rRouteTableProdPrivateB
    rRouteTableProdPublic:
        Value: !Ref rRouteTableMain
    rAppPrivateSubnetA:
        Condition: cCreateAppSubnets
        Value: !Ref rAppPrivateSubnetA
    rAppPrivateSubnetB:
        Condition: cCreateAppSubnets
        Value: !Ref rAppPrivateSubnetB
    rDBPrivateSubnetA:
        Value: !Ref rDBPrivateSubnetA
    rDBPrivateSubnetB:
        Value: !Ref rDBPrivateSubnetB
    rNACLPrivate:
        Value: !Ref rNACLPrivate
    rNACLPublic:
        Value: !Ref rNACLPublic
